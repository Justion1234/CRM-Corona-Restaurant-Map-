<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>맛있는 음식점</title>
    <link rel="stylesheet" href="/stylesheets/find_R_Beta.css" />
</head>
<body>
    <div class="Beta">
        <p>
            아직 개발중입니다!
        </p>
    </div>
    <ul id="button_bar"> <!-- 메인 페이지, 장소검색 버튼이 있는 ul 태그 -->
        <li>
            <a></a>
        </li>
        <li style="float: right;">
          <a class="searchB" href="/search">장소 검색</a> <!-- 업로드 페이지로 넘어가는 버튼  -->
        </li> 
        <li style="float: right;"> 
            <a class="mapB" href="/">메인 페이지</a> <!-- 원래의 지도 페이지로 돌아가는 버튼 -->
        </li>
      </ul> 



<div id="map" style="width:100%;height:100vh;"></div>

<script src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=d7d5202f8a4ccb3ba72bdf454037d421&libraries=clusterer%22%3E"></script>
<script>
var mapContainer = document.getElementById('map'), // 지도의 중심좌표
    mapOption = { 
        center: new kakao.maps.LatLng(37.566268010171775, 126.97791572521345), // 지도의 중심좌표
        level: 4 // 지도의 확대 레벨
    }; 

var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

var imageSrc = 'https://cdn.discordapp.com/attachments/791275726779318282/963318956393914448/11.png', // 선별 진료소 이미지 링크   
    imageSize = new daum.maps.Size(33, 35), // 마커이미지의 크기
    imageOption = {offset: new daum.maps.Point(15, 30)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

    var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize, imageOption) //markerImage에 이미지 링크, 마커 이미지 크기, 이미지 안에서의 좌표를 담음

// 지도에 마커를 표시합니다 

        


function getClickMap(map, overlay){
return function(){
    overlay.setMap(null);
}
}


const showMenu = (toggleId, navbarId, bodyId) => {
    const toggle = document.getElementById(toggleId),
    navbar = document.getElementById(navbarId),
    bodypadding = document.getElementById(bodyId)

    if( toggle && navbar ) {
        toggle.addEventListener('click', ()=>{
            navbar.classList.toggle('expander');

            bodypadding.classList.toggle('body-pd')
        })
    }
}

showMenu('nav-toggle', 'navbar', 'body-pd')

/* LINK ACTIVE */
const linkColor = document.querySelectorAll('.nav__link')
function colorLink() {
    linkColor.forEach(l=> l.classList.remove('active'))
    this.classList.add('active')
}
linkColor.forEach(l=> l.addEventListener('click', colorLink))

/* COLLAPSE MENU */
const linkCollapse = document.getElementsByClassName('collapse__link')
var i

for(i=0;i<linkCollapse.length;i++) {
    linkCollapse[i].addEventListener('click', function(){
        const collapseMenu = this.nextElementSibling
        collapseMenu.classList.toggle('showCollapse')

        const rotate = collapseMenu.previousElementSibling
        rotate.classList.toggle('rotate')
    });
}
</script>

</body>
</html>